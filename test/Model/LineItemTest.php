<?php
/**
 * LineItemTest
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  macropage\SDKs\ebay\rest\fulfillment
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Fulfillment API
 *
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: 1.11.1
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace macropage\SDKs\ebay\rest\fulfillment;

use PHPUnit\Framework\TestCase;

/**
 * LineItemTest Class Doc Comment
 *
 * @category    Class
 * @description This type contains the details of each line item in an order.
 * @package     macropage\SDKs\ebay\rest\fulfillment
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class LineItemTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "LineItem"
     */
    public function testLineItem()
    {
    }

    /**
     * Test attribute "appliedPromotions"
     */
    public function testPropertyAppliedPromotions()
    {
    }

    /**
     * Test attribute "deliveryCost"
     */
    public function testPropertyDeliveryCost()
    {
    }

    /**
     * Test attribute "discountedLineItemCost"
     */
    public function testPropertyDiscountedLineItemCost()
    {
    }

    /**
     * Test attribute "ebayCollectAndRemitTaxes"
     */
    public function testPropertyEbayCollectAndRemitTaxes()
    {
    }

    /**
     * Test attribute "giftDetails"
     */
    public function testPropertyGiftDetails()
    {
    }

    /**
     * Test attribute "legacyItemId"
     */
    public function testPropertyLegacyItemId()
    {
    }

    /**
     * Test attribute "legacyVariationId"
     */
    public function testPropertyLegacyVariationId()
    {
    }

    /**
     * Test attribute "lineItemCost"
     */
    public function testPropertyLineItemCost()
    {
    }

    /**
     * Test attribute "lineItemFulfillmentInstructions"
     */
    public function testPropertyLineItemFulfillmentInstructions()
    {
    }

    /**
     * Test attribute "lineItemFulfillmentStatus"
     */
    public function testPropertyLineItemFulfillmentStatus()
    {
    }

    /**
     * Test attribute "lineItemId"
     */
    public function testPropertyLineItemId()
    {
    }

    /**
     * Test attribute "listingMarketplaceId"
     */
    public function testPropertyListingMarketplaceId()
    {
    }

    /**
     * Test attribute "properties"
     */
    public function testPropertyProperties()
    {
    }

    /**
     * Test attribute "purchaseMarketplaceId"
     */
    public function testPropertyPurchaseMarketplaceId()
    {
    }

    /**
     * Test attribute "quantity"
     */
    public function testPropertyQuantity()
    {
    }

    /**
     * Test attribute "refunds"
     */
    public function testPropertyRefunds()
    {
    }

    /**
     * Test attribute "sku"
     */
    public function testPropertySku()
    {
    }

    /**
     * Test attribute "soldFormat"
     */
    public function testPropertySoldFormat()
    {
    }

    /**
     * Test attribute "taxes"
     */
    public function testPropertyTaxes()
    {
    }

    /**
     * Test attribute "title"
     */
    public function testPropertyTitle()
    {
    }

    /**
     * Test attribute "total"
     */
    public function testPropertyTotal()
    {
    }
}
